{"ast":null,"code":"import _objectSpread from \"/Users/marwan01/Desktop/Athlytics/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/marwan01/Desktop/Athlytics/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/marwan01/Desktop/Athlytics/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/marwan01/Desktop/Athlytics/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/marwan01/Desktop/Athlytics/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/marwan01/Desktop/Athlytics/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/marwan01/Desktop/Athlytics/src/components/Messages/Messages.js\";\nimport React, { Component } from 'react';\nimport { AuthUserContext } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\nimport { Card, Message, Button, Loader, Form, Icon } from 'semantic-ui-react';\n\nvar Messages =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Messages, _Component);\n\n  function Messages(props) {\n    var _this;\n\n    _classCallCheck(this, Messages);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Messages).call(this, props));\n\n    _this.onListenForMessages = function () {\n      _this.setState({\n        loading: true\n      });\n\n      _this.props.firebase.messages().orderByChild('createdAt').limitToLast(_this.state.limit).on('value', function (snapshot) {\n        var messageObject = snapshot.val();\n\n        if (messageObject) {\n          var messageList = Object.keys(messageObject).map(function (key) {\n            return _objectSpread({}, messageObject[key], {\n              uid: key\n            });\n          });\n\n          _this.setState({\n            messages: messageList,\n            loading: false\n          });\n        } else {\n          _this.setState({\n            messages: null,\n            loading: false\n          });\n        }\n      });\n    };\n\n    _this.onChangeText = function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    };\n\n    _this.onCreateMessage = function (event, authUser) {\n      _this.props.firebase.messages().push({\n        text: _this.state.text,\n        userId: authUser.uid,\n        createdAt: _this.props.firebase.serverValue.TIMESTAMP\n      });\n\n      _this.setState({\n        text: ''\n      });\n\n      event.preventDefault();\n    };\n\n    _this.onEditMessage = function (message, text) {\n      _this.props.firebase.message(message.uid).set(_objectSpread({}, message, {\n        text: text,\n        editedAt: _this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    _this.onRemoveMessage = function (uid) {\n      _this.props.firebase.message(uid).remove();\n    };\n\n    _this.onNextPage = function () {\n      _this.setState(function (state) {\n        return {\n          limit: state.limit + 5\n        };\n      }, _this.onListenForMessages);\n    };\n\n    _this.state = {\n      text: '',\n      loading: false,\n      messages: [],\n      limit: 5\n    };\n    return _this;\n  }\n\n  _createClass(Messages, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onListenForMessages();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.firebase.messages().off();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var users = this.props.users;\n      var _this$state = this.state,\n          text = _this$state.text,\n          messages = _this$state.messages,\n          loading = _this$state.loading;\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, function (authUser) {\n        return React.createElement(Card, {\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(Card.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(Card.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, loading && React.createElement(Loader, {\n          active: true,\n          inline: \"centered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }), !loading && messages && React.createElement(Button, {\n          size: \"small\",\n          positive: true,\n          type: \"button\",\n          onClick: _this2.onNextPage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Load Older Workouts\"), messages && React.createElement(MessageList, {\n          messages: messages.map(function (message) {\n            return _objectSpread({}, message, {\n              user: users ? users[message.userId] : {\n                userId: message.userId\n              }\n            });\n          }),\n          onEditMessage: _this2.onEditMessage,\n          onRemoveMessage: _this2.onRemoveMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }), !loading && !messages && React.createElement(Message, {\n          info: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"There are no messages ...\")), !loading && React.createElement(Form, {\n          onSubmit: function onSubmit(event) {\n            return _this2.onCreateMessage(event, authUser);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(Form.TextArea, {\n          value: text,\n          onChange: _this2.onChangeText,\n          placeholder: \"Create new workout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }), React.createElement(Button, {\n          primary: true,\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"Add \", React.createElement(Icon, {\n          name: \"send\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }))))));\n      });\n    }\n  }]);\n\n  return Messages;\n}(Component);\n\nexport default withFirebase(Messages);","map":{"version":3,"sources":["/Users/marwan01/Desktop/Athlytics/src/components/Messages/Messages.js"],"names":["React","Component","AuthUserContext","withFirebase","MessageList","Card","Message","Button","Loader","Form","Icon","Messages","props","onListenForMessages","setState","loading","firebase","messages","orderByChild","limitToLast","state","limit","on","snapshot","messageObject","val","messageList","Object","keys","map","key","uid","onChangeText","event","text","target","value","onCreateMessage","authUser","push","userId","createdAt","serverValue","TIMESTAMP","preventDefault","onEditMessage","message","set","editedAt","onRemoveMessage","remove","onNextPage","off","users","user"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SACEC,IADF,EAEEC,OAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,IANF,QAOO,mBAPP;;IASMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UAenBC,mBAfmB,GAeG,YAAM;AAC1B,YAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,YAAKH,KAAL,CAAWI,QAAX,CACGC,QADH,GAEGC,YAFH,CAEgB,WAFhB,EAGGC,WAHH,CAGe,MAAKC,KAAL,CAAWC,KAH1B,EAIGC,EAJH,CAIM,OAJN,EAIe,UAAAC,QAAQ,EAAI;AACvB,YAAMC,aAAa,GAAGD,QAAQ,CAACE,GAAT,EAAtB;;AAEA,YAAID,aAAJ,EAAmB;AACjB,cAAME,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,GAA3B,CAA+B,UAAAC,GAAG;AAAA,qCACjDN,aAAa,CAACM,GAAD,CADoC;AAEpDC,cAAAA,GAAG,EAAED;AAF+C;AAAA,WAAlC,CAApB;;AAKA,gBAAKhB,QAAL,CAAc;AACZG,YAAAA,QAAQ,EAAES,WADE;AAEZX,YAAAA,OAAO,EAAE;AAFG,WAAd;AAID,SAVD,MAUO;AACL,gBAAKD,QAAL,CAAc;AAAEG,YAAAA,QAAQ,EAAE,IAAZ;AAAkBF,YAAAA,OAAO,EAAE;AAA3B,WAAd;AACD;AACF,OApBH;AAqBD,KAvCkB;;AAAA,UA6CnBiB,YA7CmB,GA6CJ,UAAAC,KAAK,EAAI;AACtB,YAAKnB,QAAL,CAAc;AAAEoB,QAAAA,IAAI,EAAED,KAAK,CAACE,MAAN,CAAaC;AAArB,OAAd;AACD,KA/CkB;;AAAA,UAiDnBC,eAjDmB,GAiDD,UAACJ,KAAD,EAAQK,QAAR,EAAqB;AACrC,YAAK1B,KAAL,CAAWI,QAAX,CAAoBC,QAApB,GAA+BsB,IAA/B,CAAoC;AAClCL,QAAAA,IAAI,EAAE,MAAKd,KAAL,CAAWc,IADiB;AAElCM,QAAAA,MAAM,EAAEF,QAAQ,CAACP,GAFiB;AAGlCU,QAAAA,SAAS,EAAE,MAAK7B,KAAL,CAAWI,QAAX,CAAoB0B,WAApB,CAAgCC;AAHT,OAApC;;AAMA,YAAK7B,QAAL,CAAc;AAAEoB,QAAAA,IAAI,EAAE;AAAR,OAAd;;AAEAD,MAAAA,KAAK,CAACW,cAAN;AACD,KA3DkB;;AAAA,UA6DnBC,aA7DmB,GA6DH,UAACC,OAAD,EAAUZ,IAAV,EAAmB;AACjC,YAAKtB,KAAL,CAAWI,QAAX,CAAoB8B,OAApB,CAA4BA,OAAO,CAACf,GAApC,EAAyCgB,GAAzC,mBACKD,OADL;AAEEZ,QAAAA,IAAI,EAAJA,IAFF;AAGEc,QAAAA,QAAQ,EAAE,MAAKpC,KAAL,CAAWI,QAAX,CAAoB0B,WAApB,CAAgCC;AAH5C;AAKD,KAnEkB;;AAAA,UAqEnBM,eArEmB,GAqED,UAAAlB,GAAG,EAAI;AACvB,YAAKnB,KAAL,CAAWI,QAAX,CAAoB8B,OAApB,CAA4Bf,GAA5B,EAAiCmB,MAAjC;AACD,KAvEkB;;AAAA,UAyEnBC,UAzEmB,GAyEN,YAAM;AACjB,YAAKrC,QAAL,CACE,UAAAM,KAAK;AAAA,eAAK;AAAEC,UAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAc;AAAvB,SAAL;AAAA,OADP,EAEE,MAAKR,mBAFP;AAID,KA9EkB;;AAGjB,UAAKO,KAAL,GAAa;AACXc,MAAAA,IAAI,EAAE,EADK;AAEXnB,MAAAA,OAAO,EAAE,KAFE;AAGXE,MAAAA,QAAQ,EAAE,EAHC;AAIXI,MAAAA,KAAK,EAAE;AAJI,KAAb;AAHiB;AASlB;;;;wCAEmB;AAClB,WAAKR,mBAAL;AACD;;;2CA4BsB;AACrB,WAAKD,KAAL,CAAWI,QAAX,CAAoBC,QAApB,GAA+BmC,GAA/B;AACD;;;6BAqCQ;AAAA;;AAAA,UACCC,KADD,GACW,KAAKzC,KADhB,CACCyC,KADD;AAAA,wBAE6B,KAAKjC,KAFlC;AAAA,UAECc,IAFD,eAECA,IAFD;AAAA,UAEOjB,QAFP,eAEOA,QAFP;AAAA,UAEiBF,OAFjB,eAEiBA,OAFjB;AAGP,aACE,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAAAuB,QAAQ;AAAA,eACP,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGvB,OAAO,IAAI,oBAAC,MAAD;AAAQ,UAAA,MAAM,MAAd;AAAe,UAAA,MAAM,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADd,EAGG,CAACA,OAAD,IAAYE,QAAZ,IACC,oBAAC,MAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,QAAQ,MAFV;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,OAAO,EAAE,MAAI,CAACkC,UAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAJJ,EAcGlC,QAAQ,IACP,oBAAC,WAAD;AACE,UAAA,QAAQ,EAAEA,QAAQ,CAACY,GAAT,CAAa,UAAAiB,OAAO;AAAA,qCACzBA,OADyB;AAE5BQ,cAAAA,IAAI,EAAED,KAAK,GACPA,KAAK,CAACP,OAAO,CAACN,MAAT,CADE,GAEP;AAAEA,gBAAAA,MAAM,EAAEM,OAAO,CAACN;AAAlB;AAJwB;AAAA,WAApB,CADZ;AAOE,UAAA,aAAa,EAAE,MAAI,CAACK,aAPtB;AAQE,UAAA,eAAe,EAAE,MAAI,CAACI,eARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAfJ,EA2BG,CAAClC,OAAD,IAAY,CAACE,QAAb,IACC,oBAAC,OAAD;AAAS,UAAA,IAAI,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,CA5BJ,EAiCG,CAACF,OAAD,IACC,oBAAC,IAAD;AACE,UAAA,QAAQ,EAAE,kBAAAkB,KAAK;AAAA,mBACb,MAAI,CAACI,eAAL,CAAqBJ,KAArB,EAA4BK,QAA5B,CADa;AAAA,WADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,IAAD,CAAM,QAAN;AACE,UAAA,KAAK,EAAEJ,IADT;AAEE,UAAA,QAAQ,EAAE,MAAI,CAACF,YAFjB;AAGE,UAAA,WAAW,EAAC,oBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAUE,oBAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAgB,UAAA,IAAI,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACM,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADN,CAVF,CAlCJ,CADF,CADF,CADO;AAAA,OADX,CADF;AA4DD;;;;EAhJoB/B,S;;AAmJvB,eAAeE,YAAY,CAACQ,QAAD,CAA3B","sourcesContent":["import React, { Component } from 'react';\n\nimport { AuthUserContext } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\n\nimport {\n  Card,\n  Message,\n  Button,\n  Loader,\n  Form,\n  Icon,\n} from 'semantic-ui-react';\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      loading: false,\n      messages: [],\n      limit: 5,\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForMessages();\n  }\n\n  onListenForMessages = () => {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .messages()\n      .orderByChild('createdAt')\n      .limitToLast(this.state.limit)\n      .on('value', snapshot => {\n        const messageObject = snapshot.val();\n\n        if (messageObject) {\n          const messageList = Object.keys(messageObject).map(key => ({\n            ...messageObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            messages: messageList,\n            loading: false,\n          });\n        } else {\n          this.setState({ messages: null, loading: false });\n        }\n      });\n  };\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = (event, authUser) => {\n    this.props.firebase.messages().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ text: '' });\n\n    event.preventDefault();\n  };\n\n  onEditMessage = (message, text) => {\n    this.props.firebase.message(message.uid).set({\n      ...message,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n  };\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onNextPage = () => {\n    this.setState(\n      state => ({ limit: state.limit + 5 }),\n      this.onListenForMessages,\n    );\n  };\n\n  render() {\n    const { users } = this.props;\n    const { text, messages, loading } = this.state;\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <Card fluid={true}>\n            <Card.Content>\n              <Card.Description>\n                {loading && <Loader active inline=\"centered\" />}\n\n                {!loading && messages && (\n                  <Button\n                    size=\"small\"\n                    positive\n                    type=\"button\"\n                    onClick={this.onNextPage}\n                  >\n                    Load Older Workouts\n                  </Button>\n                )}\n\n                {messages && (\n                  <MessageList\n                    messages={messages.map(message => ({\n                      ...message,\n                      user: users\n                        ? users[message.userId]\n                        : { userId: message.userId },\n                    }))}\n                    onEditMessage={this.onEditMessage}\n                    onRemoveMessage={this.onRemoveMessage}\n                  />\n                )}\n\n                {!loading && !messages && (\n                  <Message info>\n                    <p>There are no messages ...</p>\n                  </Message>\n                )}\n\n                {!loading && (\n                  <Form\n                    onSubmit={event =>\n                      this.onCreateMessage(event, authUser)\n                    }\n                  >\n                    <Form.TextArea\n                      value={text}\n                      onChange={this.onChangeText}\n                      placeholder=\"Create new workout\"\n                    />\n                    <Button primary type=\"submit\">\n                      Add <Icon name=\"send\" />\n                    </Button>\n                  </Form>\n                )}\n              </Card.Description>\n            </Card.Content>\n          </Card>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(Messages);\n"]},"metadata":{},"sourceType":"module"}